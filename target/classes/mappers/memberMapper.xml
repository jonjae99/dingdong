<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.dingdong.mappers.memberMapper">
	<select id="login" parameterType="kr.co.dingdong.domain.LoginVO" resultType="Member">
		SELECT id, nickname, del, profile, etc
		FROM member
		WHERE id=#{id} AND password=#{password}
	</select>
	
	<update id="login_date_update" parameterType="java.lang.String">
		UPDATE member
		SET login_date=now()
		WHERE id=#{id}
	</update>
	
	<select id="selectOne" parameterType="java.lang.String" resultType="Member">
	 	SELECT idx, id, name, nickname, password, email, gender, birth, phone, profile, del, etc
	 	FROM member
	 	WHERE id=#{id}
	</select>
	
	<insert id="insert" parameterType="Member">
		<choose>
		<when test="email == null || password == null">
			INSERT INTO member
			(id, nickname, profile, etc)
			VALUES (#{id}, #{nickname}, #{profile}, #{etc}) 
		</when>
		<otherwise>
			INSERT INTO member
			(id, name, nickname, password, email, etc)
			VALUES (#{id}, #{name}, #{nickname}, #{password}, #{email}, #{etc}) 
		</otherwise>
		</choose>
	</insert>
	
	<update id="update" parameterType="Member">
		<choose>
			<when test="password == ''">
				UPDATE member
				SET name=#{name}, nickname=#{nickname}, email=#{email}
				WHERE id=#{id}
			</when>
			<when test="password == null &amp;&amp; name == null">
				UPDATE member
				SET nickname=#{nickname}, profile=#{profile}
				WHERE id=#{id}
			</when>
			<otherwise>
				UPDATE member
				SET name=#{name}, nickname=#{nickname}, email=#{email}, password=#{password}
				WHERE id=#{id}
			</otherwise>
		</choose>
	
	</update>

	
	<update id="updateProfile" parameterType="Member">
		UPDATE member
		SET profile=#{profile}
		WHERE id=#{id}
	</update>
	
	<update id="quit" parameterType="Member">
		UPDATE member
		SET del=1, del_date=now(), del_reason=#{delReason}
		WHERE id=#{id}
	</update>
	
	
	<select id="findByEmail" resultType="Member" parameterType="java.lang.String">
		SELECT id, signup_date, email
		FROM member
		WHERE email=#{email}
	</select>
	
	<select id="myCommunityBoard" resultType="CommunityVO" parameterType="java.lang.String">
		SELECT board_num, title, content, m.nickname, c.id, reg_date, views, reply, good, bad, notice, edit, c.report, jjim, membership, category, blind
		FROM community_board c
		JOIN member m
		on c.id = m.id
		WHERE c.id=#{id} 
	</select>
	
	<select id="findByIdx" resultType="Member" parameterType="int">
		SELECT idx, nickname, point, signup_date, del, rest, profile
		FROM member
		WHERE idx = #{idx}
	</select>
	
	
	<select id="otherCommunityBoard" resultType="CommunityVO" parameterType="int">
		SELECT board_num, title, content, m.nickname, c.id, c.reg_date, views, reply, good, bad, notice, edit, edit_date, c.del, c.del_date, c.report, jjim, shareurl, membership, category, blind, m.profile
		FROM community_board c
		JOIN member m
		ON c.id = m.id
		WHERE c.del=0
		AND c.notice = 0
		AND idx = #{idx}
		ORDER BY reg_date DESC
	</select>	
	
	<update id="report">
		update member
		set report=report+1
		where id=#{reportee}
	</update>
	
	
	
</mapper>